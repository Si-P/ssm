<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"
         version="4.0">
  <!--声明、注册springmvc的核心对象DispatcherServlet-->
  <!--要保证容器创建的唯一性-->
  <!--DispatcherServlet在创建过程中，会同时创建springmvc容器对象，读取springmvc的配置文件，把文件中的对象创建好-->
  <servlet>
    <servlet-name>myWeb</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <init-param>
      <param-name>contextConfigLocation</param-name>
      <param-value>classpath:conf/dispatcherServlet.xml</param-value>
    </init-param>
    <!--在tomcat启动后创建对象，整数为创建对象的顺序-->
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet-mapping>
    <servlet-name>myWeb</servlet-name>
    <!---
    url-pattern可以使用两种值
    1、扩展名方式，语法 *.do *.mvc *.action
    2.使用斜杠/
    -->
    <url-pattern>/</url-pattern>
  </servlet-mapping>
  <!--注册声明过滤器，解决post请求乱码-->
  <filter>
    <filter-name>po</filter-name>
    <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
    <init-param>
      <param-name>encoding</param-name>
      <param-value>utf-8</param-value>
    </init-param>
    <!--强制请求对象（HttpServletRequest）使用上面的encoding-->
    <init-param>
      <param-name>forceRequestEncoding</param-name>
      <param-value>true</param-value>
    </init-param>
    <!--强制响应对象（HttpServletResponse）使用上面的encoding-->
    <init-param>
      <param-name>forceResponseEncoding</param-name>
      <param-value>true</param-value>
    </init-param>
  </filter>
  <filter-mapping>
    <filter-name>po</filter-name>
    <!--/*表示强制所有请求先通过过滤器-->
    <url-pattern>/*</url-pattern>
  </filter-mapping>
  <!--注册spring的监听器-->
  <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>classpath:conf/applicationContext.xml</param-value>
  </context-param>
  <listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>
</web-app>